// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(WebApplication1Context))]
    [Migration("20180810112641_pdfPhth")]
    partial class pdfPhth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.AuxParam", b =>
                {
                    b.Property<int>("AuxParmID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Verno");

                    b.HasKey("AuxParmID");

                    b.ToTable("AuxParam");
                });

            modelBuilder.Entity("WebApplication1.Models.eInvoice", b =>
                {
                    b.Property<int>("eInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<double>("Amount");

                    b.Property<string>("Authorizor");

                    b.Property<int?>("AuxParmID");

                    b.Property<string>("Bg");

                    b.Property<string>("City");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("DueD");

                    b.Property<bool>("DueDateSpecified");

                    b.Property<double>("Freight");

                    b.Property<bool>("FreightSpecified");

                    b.Property<string>("InvoiceD");

                    b.Property<bool>("InvoiceDateSpecified");

                    b.Property<double>("InvoiceFee");

                    b.Property<string>("InvoiceNo");

                    b.Property<string>("InvoiceRecipient");

                    b.Property<string>("InvoiceType");

                    b.Property<string>("Message");

                    b.Property<string>("Ocr");

                    b.Property<string>("OrgNo");

                    b.Property<string>("OurCustomerNo");

                    b.Property<string>("OurReference");

                    b.Property<int>("PayType");

                    b.Property<string>("Pg");

                    b.Property<string>("PostCode");

                    b.Property<string>("Project");

                    b.Property<string>("PurchOrderNo");

                    b.Property<string>("Supplier");

                    b.Property<string>("SupplierNo");

                    b.Property<double>("Vat");

                    b.Property<double>("VatAmount");

                    b.Property<string>("VatCode");

                    b.Property<string>("YourReference");

                    b.Property<string>("pdfPaths");

                    b.HasKey("eInvoiceId");

                    b.HasIndex("AuxParmID");

                    b.ToTable("eInvoice");
                });

            modelBuilder.Entity("WebApplication1.Models.File", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("FileId");

                    b.ToTable("File");
                });

            modelBuilder.Entity("WebApplication1.Models.InvoiceAccounts", b =>
                {
                    b.Property<int>("InvoiceAccountsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccAuthorizor");

                    b.Property<string>("Account");

                    b.Property<double>("CreditAmount");

                    b.Property<double>("DebetAmount");

                    b.Property<string>("Profit_centre");

                    b.Property<string>("Project");

                    b.Property<DateTime>("Reg_date");

                    b.Property<int?>("eInvoiceId");

                    b.HasKey("InvoiceAccountsId");

                    b.HasIndex("eInvoiceId");

                    b.ToTable("InvoiceAccounts");
                });

            modelBuilder.Entity("WebApplication1.Models.InvoiceRows", b =>
                {
                    b.Property<int>("InvoiceRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemRow");

                    b.Property<int?>("eInvoiceId");

                    b.HasKey("InvoiceRowId");

                    b.HasIndex("eInvoiceId");

                    b.ToTable("InvoiceRows");
                });

            modelBuilder.Entity("WebApplication1.Models.eInvoice", b =>
                {
                    b.HasOne("WebApplication1.Models.AuxParam", "AuxP")
                        .WithMany()
                        .HasForeignKey("AuxParmID");
                });

            modelBuilder.Entity("WebApplication1.Models.InvoiceAccounts", b =>
                {
                    b.HasOne("WebApplication1.Models.eInvoice")
                        .WithMany("AccRows")
                        .HasForeignKey("eInvoiceId");
                });

            modelBuilder.Entity("WebApplication1.Models.InvoiceRows", b =>
                {
                    b.HasOne("WebApplication1.Models.eInvoice")
                        .WithMany("ItemRow")
                        .HasForeignKey("eInvoiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
